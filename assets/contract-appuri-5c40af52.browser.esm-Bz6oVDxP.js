import{bb as t,bc as r,af as a,bd as e,f as s,c as n,T as c,au as o,be as i,V as p,bf as h,bg as d}from"./index-BdgVNXf3.js";function l(t,r){return i(t.abi,r,t.extensions)}function u(t,r){return t in r.readContract.functions}class m{featureName=e.name;constructor(t,r,a){this.contractWrapper=t,this.schema=r,this.storage=a}parseOutputMetadata(t){return this.schema.output.parseAsync(t)}parseInputMetadata(t){return this.schema.input.parseAsync(t)}async get(){let t;if(this.supportsContractMetadata(this.contractWrapper)){const r=await this.contractWrapper.read("contractURI",[]);r&&r.includes("://")&&(t=await this.storage.downloadJSON(r))}if(!t)try{let a,e,n;try{u("name",this.contractWrapper)&&(a=await this.contractWrapper.read("name",[]))}catch(r){}try{u("symbol",this.contractWrapper)&&(e=await this.contractWrapper.read("symbol",[]))}catch(r){}try{n=await s(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)}catch(r){}t={name:a||n?.name,symbol:e,description:n?.info.title}}catch(a){throw new Error("Could not fetch contract metadata")}return this.parseOutputMetadata(t)}set=n((async t=>{const r=await this._parseAndUploadMetadata(t),a=this.contractWrapper;if(this.supportsContractMetadata(a))return c.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setContractURI",args:[r],parse:t=>({receipt:t,data:this.get})});throw new o(e)}));update=n((async t=>await this.set.prepare({...await this.get(),...t})));async _parseAndUploadMetadata(t){const r=await this.parseInputMetadata(t);return this.storage.upload(r)}supportsContractMetadata(t){return l(t,"ContractMetadata")}}class f{constructor(t){this.contractWrapper=t}addTransactionListener(r){this.contractWrapper.addListener(t.Transaction,r)}removeTransactionListener(r){this.contractWrapper.off(t.Transaction,r)}addEventListener(t,r){const a=this.contractWrapper.readContract.interface.getEvent(t),e={address:this.contractWrapper.address,topics:[this.contractWrapper.readContract.interface.getEventTopic(a)]},s=t=>{const a=this.contractWrapper.readContract.interface.parseLog(t);r(this.toContractEvent(a.eventFragment,a.args,t))};return this.contractWrapper.getProvider().on(e,s),()=>{this.contractWrapper.getProvider().off(e,s)}}listenToAllEvents(t){const r={address:this.contractWrapper.address},a=r=>{try{const a=this.contractWrapper.readContract.interface.parseLog(r);t(this.toContractEvent(a.eventFragment,a.args,r))}catch(a){}};return this.contractWrapper.getProvider().on(r,a),()=>{this.contractWrapper.getProvider().off(r,a)}}removeEventListener(t,r){const a=this.contractWrapper.readContract.interface.getEvent(t);this.contractWrapper.readContract.off(a.name,r)}removeAllListeners(){this.contractWrapper.readContract.removeAllListeners();const t={address:this.contractWrapper.address};this.contractWrapper.getProvider().removeAllListeners(t)}async getAllEvents(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{fromBlock:0,toBlock:"latest",order:"desc"};const r=(await this.contractWrapper.readContract.queryFilter({},t.fromBlock,t.toBlock)).sort(((r,a)=>"desc"===t.order?a.blockNumber-r.blockNumber:r.blockNumber-a.blockNumber));return this.parseEvents(r)}async getEvents(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{fromBlock:0,toBlock:"latest",order:"desc"};const a=this.contractWrapper.readContract.interface.getEvent(t),e=r.filters?a.inputs.map((t=>r.filters[t.name])):[],s=this.contractWrapper.readContract.filters[a.name](...e),n=(await this.contractWrapper.readContract.queryFilter(s,r.fromBlock,r.toBlock)).sort(((t,a)=>"desc"===r.order?a.blockNumber-t.blockNumber:t.blockNumber-a.blockNumber));return this.parseEvents(n)}parseEvents(t){return t.map((t=>{const r=Object.fromEntries(Object.entries(t).filter((t=>"function"!=typeof t[1]&&"args"!==t[0])));if(t.args){const a=Object.entries(t.args),e=a.slice(a.length/2,a.length),s={};for(const[t,r]of e)s[t]=r;return{eventName:t.event||"",data:s,transaction:r}}return{eventName:t.event||"",data:{},transaction:r}}))}toContractEvent(t,r,a){const e=Object.fromEntries(Object.entries(a).filter((t=>"function"!=typeof t[1]&&"args"!==t[0]))),s={};return t.inputs.forEach(((t,a)=>{if(Array.isArray(r[a])){const e=t.components;if(e){const n=r[a];if("tuple[]"===t.type){const r=[];for(let t=0;t<n.length;t++){const a=n[t],s={};for(let t=0;t<e.length;t++){s[e[t].name]=a[t]}r.push(s)}s[t.name]=r}else{const r={};for(let t=0;t<e.length;t++){r[e[t].name]=n[t]}s[t.name]=r}}}else s[t.name]=r[a]})),{eventName:t.name,data:s,transaction:e}}}class g{constructor(t){this.contractWrapper=t}async gasCostOf(t,a){const e=await r(this.contractWrapper.getProvider(),await this.contractWrapper.populateTransaction(t,a));return d(e)}async gasLimitOf(t,r){return this.contractWrapper.estimateGas(t,r)}async currentGasPriceInGwei(){const t=await this.contractWrapper.getProvider().getGasPrice();return a(t,"gwei")}}class W{featureName=p.name;constructor(t,r,a){this.contractWrapper=t,this.metadata=r,this.storage=a}async get(){return l(this.contractWrapper,"AppURI")?await this.contractWrapper.read("appURI",[]):h((await this.metadata.get()).app_uri||"",this.storage.getGatewayUrls())}set=n((async t=>l(this.contractWrapper,"AppURI")?c.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAppURI",args:[t]}):await this.metadata.update.prepare({app_uri:t})))}export{f as C,g as G,m as a,W as b,l as d,u as h};
//# sourceMappingURL=contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js.map
