{"version":3,"file":"contract-interceptor-d7b164a7.browser.esm-Dui4xQZ5.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js"],"sourcesContent":["/**\n * Allows overriding transaction behavior for this contract\n * @internal\n */\nclass ContractInterceptor {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * The next transaction executed will add/replace any overrides passed via the passed in hook.\n   * @remarks Overridden values will be applied to the next transaction executed.\n   * @example\n   * ```javascript\n   * contract.interceptor.overrideNextTransaction(() => ({\n   *   gasLimit: 3000000,\n   * }));\n   * ```\n   * @param hook - the hook to add or replace any CallOverrides (gas limit, gas price, nonce, from, value, etc...)\n   * @public\n   */\n  overrideNextTransaction(hook) {\n    this.contractWrapper.withTransactionOverride(hook);\n  }\n}\n\nexport { ContractInterceptor as C };\n"],"names":["ContractInterceptor","constructor","contractWrapper","this","overrideNextTransaction","hook","withTransactionOverride"],"mappings":"AAIA,MAAMA,EACJ,WAAAC,CAAYC,GACVC,KAAKD,gBAAkBA,CAC3B,CAcE,uBAAAE,CAAwBC,GACtBF,KAAKD,gBAAgBI,wBAAwBD,EACjD","x_google_ignoreList":[0]}