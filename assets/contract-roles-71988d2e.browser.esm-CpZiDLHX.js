import{N as e,i as t,a1 as r,c as a,J as o,y as s,T as n,bi as i}from"./index-BdgVNXf3.js";import{h as c}from"./contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js";class l{featureName=e.name;constructor(e,t){this.contractWrapper=e,this.roles=t}async getAll(){t(this.roles.length);const e={},r=Object.entries(this.roles);return(await Promise.all(r.map((e=>{let[,t]=e;return this.get(t)})))).forEach(((t,a)=>e[r[a][1]]=t)),e}async get(e){t(this.roles.includes(e));const a=this.contractWrapper;if(c("getRoleMemberCount",a)&&c("getRoleMember",a)){const t=r(e),o=(await a.read("getRoleMemberCount",[t])).toNumber();return await Promise.all(Array.from(Array(o).keys()).map((e=>a.read("getRoleMember",[t,e]))))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}setAll=a((async(e,a)=>{const i=a||await this.contractWrapper.getSignerAddress(),c=new o(this.contractWrapper),l=Object.keys(e);t(l.length),t(l.every((e=>this.roles.includes(e))));const p=await this.getAll(),m=[],h=l.sort((e=>"admin"===e?1:-1));for(let t=0;t<h.length;t++){const a=h[t],[o,n]=await Promise.all([Promise.all(e[a]?.map((e=>s(e)))||[]),Promise.all(p[a]?.map((e=>s(e)))||[])]),l=o.filter((e=>!n.includes(e))),u=n.filter((e=>!o.includes(e)));if(u.length>1){const e=u.indexOf(i);e>-1&&(u.splice(e,1),u.push(i))}if(l.length&&l.forEach((e=>{m.push(c.encode("grantRole",[r(a),e]))})),u.length){(await Promise.all(u.map((e=>this.getRevokeRoleFunctionName(e))))).forEach(((e,t)=>m.push(c.encode(e,[r(a),u[t]]))))}}return n.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[m]})}));async verify(e,t){await Promise.all(e.map((async e=>{const[r,a]=await Promise.all([this.get(e),s(t)]);if(!r.map((e=>e.toLowerCase())).includes(a.toLowerCase()))throw new i(a,e)})))}grant=a((async(e,a)=>{t(this.roles.includes(e));const o=await s(a);return n.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[r(e),o]})}));revoke=a((async(e,a)=>{t(this.roles.includes(e));const o=await s(a),i=await this.getRevokeRoleFunctionName(o);return n.fromContractWrapper({contractWrapper:this.contractWrapper,method:i,args:[r(e),o]})}));async getRevokeRoleFunctionName(e){const[t,r]=await Promise.all([s(e),this.contractWrapper.getSignerAddress()]);return r.toLowerCase()===t.toLowerCase()?"renounceRole":"revokeRole"}}export{l as C};
//# sourceMappingURL=contract-roles-71988d2e.browser.esm-CpZiDLHX.js.map
