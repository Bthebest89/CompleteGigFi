import{D as t}from"./QueryParams-32a56510.browser.esm-CIeLU7Il.js";import{$ as r,H as a,A as e,an as s,J as o,ao as i,B as n,a1 as c,a2 as p,c as m,T as h}from"./index-BdgVNXf3.js";import{a as l,b as d,G as u,C as w}from"./contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js";import{C as f}from"./contract-interceptor-d7b164a7.browser.esm-Dui4xQZ5.js";import{C as b,D as y,a as W}from"./contract-owner-49e75547.browser.esm-_SCqISV8.js";import{C as g}from"./contract-platform-fee-e756e68f.browser.esm-CRqOvknr.js";import{C as j}from"./contract-roles-71988d2e.browser.esm-CpZiDLHX.js";import{C}from"./contract-sales-918c7cb8.browser.esm-DBh2PU1o.js";import{D as S}from"./drop-claim-conditions-e6f2abbf.browser.esm-DUin9XFx.js";import{S as T}from"./erc-721-standard-4c4125d2.browser.esm-CwkY8p4N.js";import{a as v}from"./erc-721-27306550.browser.esm-BS-g0s5y.js";import{P as N}from"./thirdweb-checkout-f6974aaf.browser.esm-BEBBIyQl.js";import"./web3-vendor-D-smDdvq.js";import"./setErc20Allowance-7f76f677.browser.esm-DUVYy-Mo.js";import"./react-vendor-oRnAdrvc.js";import"./ui-vendor-DvZrbspg.js";import"./index-voFwA1yT.js";import"./treeify-PLB7ybit.js";import"./assertEnabled-d1700f0b.browser.esm-C0-eUoBY.js";class A extends T{static contractRoles=r;constructor(t,r,n){let c=arguments.length>4?arguments[4]:void 0,p=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new a(t,r,c,arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n),n,p),this.abi=e.parse(c||[]),this.metadata=new l(this.contractWrapper,s,this.storage),this.app=new d(this.contractWrapper,this.metadata,this.storage),this.roles=new j(this.contractWrapper,A.contractRoles),this.royalties=new b(this.contractWrapper,this.metadata),this.sales=new C(this.contractWrapper),this.encoder=new o(this.contractWrapper),this.estimator=new u(this.contractWrapper),this.events=new w(this.contractWrapper),this.platformFees=new g(this.contractWrapper),this.interceptor=new f(this.contractWrapper),this.claimConditions=new S(this.contractWrapper,this.metadata,this.storage),this.signature=new v(this.contractWrapper,this.storage),this.revealer=new y(this.contractWrapper,this.storage,i.name,(()=>this.erc721.nextTokenIdToMint())),this.signature=new v(this.contractWrapper,this.storage),this.owner=new W(this.contractWrapper),this.checkout=new N(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async totalSupply(){const[t,r]=await Promise.all([this.totalClaimedSupply(),this.totalUnclaimedSupply()]);return t.add(r)}async getAllClaimed(r){const a=n.from(r?.start||0).toNumber(),e=n.from(r?.count||t).toNumber(),s=Math.min((await this.totalClaimedSupply()).toNumber(),a+e);return await Promise.all(Array.from(Array(s).keys()).map((t=>this.get(t.toString()))))}async getAllUnclaimed(r){const a=n.from(r?.start||0).toNumber(),e=n.from(r?.count||t).toNumber(),s=n.from(Math.max((await this.totalClaimedSupply()).toNumber(),a)),o=n.from(Math.min((await this.contractWrapper.read("nextTokenIdToMint",[])).toNumber(),s.toNumber()+e));return await Promise.all(Array.from(Array(o.sub(s).toNumber()).keys()).map((t=>this.erc721.getTokenMetadata(s.add(t).toString()))))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){return!(await this.contractWrapper.read("hasRole",[c("transfer"),p]))}createBatch=m((async(t,r)=>this.erc721.lazyMint.prepare(t,r)));async getClaimTransaction(t,r,a){return this.erc721.getClaimTransaction(t,r,a)}claimTo=m((async(t,r,a)=>this.erc721.claimTo.prepare(t,r,a)));claim=m((async(t,r)=>this.erc721.claim.prepare(t,r)));burn=m((async t=>this.erc721.burn.prepare(t)));async prepare(t,r,a){return h.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}}export{A as SignatureDrop};
//# sourceMappingURL=signature-drop-266c8004.browser.esm-B1XAtvQf.js.map
