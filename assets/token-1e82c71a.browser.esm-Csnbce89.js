import{$ as t,H as r,A as e,bE as a,J as s,y as n,a1 as o,a2 as c,c as i,T as p,B as h,ad as m}from"./index-BdgVNXf3.js";import{a as l,b as d,C as w,G as f}from"./contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js";import{C as g}from"./contract-interceptor-d7b164a7.browser.esm-Dui4xQZ5.js";import{C as b}from"./contract-platform-fee-e756e68f.browser.esm-CRqOvknr.js";import{C as W}from"./contract-roles-71988d2e.browser.esm-CpZiDLHX.js";import{C as u}from"./contract-sales-918c7cb8.browser.esm-DBh2PU1o.js";import{a as j}from"./erc-20-9a18a51c.browser.esm-C1wHGVqi.js";import{S as y}from"./erc-20-standard-1e9d9631.browser.esm-D3iZln4M.js";import"./web3-vendor-D-smDdvq.js";import"./react-vendor-oRnAdrvc.js";import"./ui-vendor-DvZrbspg.js";import"./assertEnabled-d1700f0b.browser.esm-C0-eUoBY.js";import"./drop-claim-conditions-e6f2abbf.browser.esm-DUin9XFx.js";import"./index-voFwA1yT.js";import"./treeify-PLB7ybit.js";import"./setErc20Allowance-7f76f677.browser.esm-DUVYy-Mo.js";class v{constructor(t,r){this.contractWrapper=t,this.events=r}async getAllHolderBalances(){const t=(await this.events.getEvents("Transfer")).map((t=>t.data)),r={};t.forEach((t=>{const e=t?.from,a=t?.to,s=t?.value;e!==c&&(e in r||(r[e]=h.from(0)),r[e]=r[e].sub(s)),a!==c&&(a in r||(r[a]=h.from(0)),r[a]=r[a].add(s))}));const e=Object.entries(r),a=await Promise.all(e.map((t=>{let[,r]=t;return m(this.contractWrapper.getProvider(),this.contractWrapper.address,r)})));return e.map(((t,r)=>{let[e]=t;return{holder:e,balance:a[r]}}))}}class T extends y{static contractRoles=t;constructor(t,n,o){let c=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new r(t,n,c,arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o),o,i),this.abi=e.parse(c||[]),this.metadata=new l(this.contractWrapper,a,this.storage),this.app=new d(this.contractWrapper,this.metadata,this.storage),this.roles=new W(this.contractWrapper,T.contractRoles),this.sales=new u(this.contractWrapper),this.events=new w(this.contractWrapper),this.history=new v(this.contractWrapper,this.events),this.encoder=new s(this.contractWrapper),this.estimator=new f(this.contractWrapper),this.platformFees=new b(this.contractWrapper),this.interceptor=new g(this.contractWrapper),this.signature=new j(this.contractWrapper,this.roles)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[t]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await n(t)])}async isTransferRestricted(){return!(await this.contractWrapper.read("hasRole",[o("transfer"),c]))}mint=i((async t=>this.erc20.mint.prepare(t)));mintTo=i((async(t,r)=>this.erc20.mintTo.prepare(t,r)));async getMintTransaction(t,r){return this.erc20.getMintTransaction(t,r)}mintBatchTo=i((async t=>this.erc20.mintBatchTo.prepare(t)));delegateTo=i((async t=>p.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await n(t)]})));burn=i((t=>this.erc20.burn.prepare(t)));burnFrom=i((async(t,r)=>this.erc20.burnFrom.prepare(t,r)));async prepare(t,r,e){return p.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}export{T as Token};
//# sourceMappingURL=token-1e82c71a.browser.esm-Csnbce89.js.map
