const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BdgVNXf3.js","assets/web3-vendor-D-smDdvq.js","assets/react-vendor-oRnAdrvc.js","assets/ui-vendor-DvZrbspg.js","assets/index-afkGx5Ck.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./web3-vendor-D-smDdvq.js";import{z as r,ai as e,G as a,E as s,ap as n,H as o,A as c,aq as i,J as d,a1 as p,a2 as h,B as w,ae as u,af as l,c as g,T as m,y as f,ab as k,ar as R,as as A,at as W}from"./index-BdgVNXf3.js";import{h as y}from"./hasERC20Allowance-654a940b.browser.esm-Cz-jkTEv.js";import{R as v,a as P}from"./assertEnabled-d1700f0b.browser.esm-C0-eUoBY.js";import{a as C,b,G as I,C as E,d as S}from"./contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js";import{i as j}from"./marketplace-e3129e2f.browser.esm-B9VhitKm.js";import{u as L}from"./QueryParams-32a56510.browser.esm-CIeLU7Il.js";import{C as O}from"./contract-interceptor-d7b164a7.browser.esm-Dui4xQZ5.js";import{C as T,a as q}from"./contract-owner-49e75547.browser.esm-_SCqISV8.js";import{C as _}from"./contract-roles-71988d2e.browser.esm-CpZiDLHX.js";import{S as x}from"./erc-1155-standard-a5888d37.browser.esm-B3tIwJFG.js";import{E as $}from"./erc-20-9a18a51c.browser.esm-C1wHGVqi.js";import{N as U}from"./setErc20Allowance-7f76f677.browser.esm-DUVYy-Mo.js";import"./react-vendor-oRnAdrvc.js";import"./ui-vendor-DvZrbspg.js";import"./index-voFwA1yT.js";import"./treeify-PLB7ybit.js";import"./erc-1155-7ce9bee1.browser.esm-BSstTiNG.js";import"./drop-claim-conditions-e6f2abbf.browser.esm-DUin9XFx.js";const N=(()=>r.object({contractAddress:a}))(),V=(()=>N.extend({quantity:s}))(),D=(()=>N.extend({tokenId:e}))(),F=(()=>N.extend({tokenId:e,quantity:e}))(),Y=(()=>V.omit({quantity:!0}).extend({quantityPerReward:s}))(),z=D,B=(()=>F.omit({quantity:!0}).extend({quantityPerReward:e}))(),G=(()=>Y.extend({totalRewards:e.default("1")}))(),H=z,J=(()=>B.extend({totalRewards:e.default("1")}))(),K=(()=>r.object({erc20Rewards:r.array(G).default([]),erc721Rewards:r.array(H).default([]),erc1155Rewards:r.array(J).default([])}))(),M=(()=>K.extend({packMetadata:U,rewardsPerPack:e.default("1"),openStartTime:v.default(new Date)}))();class Q{featureName=R.name;constructor(t,r,e,a,s){let n=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new o(t,r,A,a,e);this.contractWrapper=n,this.storage=e,this.chainId=s,this.events=new E(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}open=g((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;return m.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:a},parse:r=>{let e=w.from(0);try{e=t.contractWrapper.parseLogs("PackOpenRequested",r?.logs)[0].args.requestId}catch(a){}return{receipt:r,id:e}}})}})());claimRewards=g((()=>{var t=this;return async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e5;return m.fromContractWrapper({contractWrapper:t.contractWrapper,method:"claimRewards",args:[],overrides:{gasLimit:r},parse:async r=>{const e=t.contractWrapper.parseLogs("PackOpened",r?.logs);if(0===e.length)throw new Error("PackOpened event not found");const a=e[0].args.rewardUnitsDistributed;return await t.parseRewards(a)}})}})());async parseRewards(t){const r=[],e=[],a=[];for(const s of t)switch(s.tokenType){case 0:{const t=await u(this.contractWrapper.getProvider(),s.assetContract);r.push({contractAddress:s.assetContract,quantityPerReward:l(s.totalAmount,t.decimals).toString()});break}case 1:e.push({contractAddress:s.assetContract,tokenId:s.tokenId.toString()});break;case 2:a.push({contractAddress:s.assetContract,tokenId:s.tokenId.toString(),quantityPerReward:s.totalAmount.toString()})}return{erc20Rewards:r,erc721Rewards:e,erc1155Rewards:a}}async addPackOpenEventListener(t){return this.events.addEventListener("PackOpened",(async r=>{t(r.data.packId.toString(),r.data.opener,await this.parseRewards(r.data.rewardUnitsDistributed))}))}async canClaimRewards(t){const r=await f(t||await this.contractWrapper.getSignerAddress());return await this.contractWrapper.read("canClaimRewards",[r])}async openAndClaim(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;const a=await this.contractWrapper.sendTransaction("openPackAndClaimRewards",[t,r,e],{gasLimit:w.from(5e5)});let s=w.from(0);try{s=this.contractWrapper.parseLogs("PackOpenRequested",a?.logs)[0].args.requestId}catch(n){}return{receipt:a,id:s}}async getLinkBalance(){const r=(await t((async()=>{const{default:t}=await import("./index-BdgVNXf3.js").then((t=>t.dV));return{default:t}}),__vite__mapDeps([0,1,2,3,4]))).default;return this.getLinkContract(r).balanceOf(this.contractWrapper.address)}async transferLink(r){const e=(await t((async()=>{const{default:t}=await import("./index-BdgVNXf3.js").then((t=>t.dV));return{default:t}}),__vite__mapDeps([0,1,2,3,4]))).default;await this.getLinkContract(e).transfer(this.contractWrapper.address,r)}getLinkContract(t){const r=W[this.chainId];if(!r)throw new Error(`No LINK token address found for chainId ${this.chainId}`);const e=new o(this.contractWrapper.getSignerOrProvider(),r,t,this.contractWrapper.options,this.storage);return new $(e,this.storage,this.chainId)}}class Z extends x{static contractRoles=n;get vrf(){return P(this._vrf,R)}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new o(t,r,s,a.gasless&&"openzeppelin"in a.gasless?{...a,gasless:{...a.gasless,openzeppelin:{...a.gasless.openzeppelin,useEOAForwarder:!0}}}:a,e),e,n),this.abi=c.parse(s||[]),this.metadata=new C(this.contractWrapper,i,this.storage),this.app=new b(this.contractWrapper,this.metadata,this.storage),this.roles=new _(this.contractWrapper,Z.contractRoles),this.royalties=new T(this.contractWrapper,this.metadata),this.encoder=new d(this.contractWrapper),this.estimator=new I(this.contractWrapper),this.events=new E(this.contractWrapper),this.interceptor=new O(this.contractWrapper),this.owner=new q(this.contractWrapper),this._vrf=this.detectVrf()}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t),this._vrf?.onNetworkUpdated(t)}getAddress(){return this.contractWrapper.address}async get(t){return this.erc1155.get(t)}async getAll(t){return this.erc1155.getAll(t)}async getOwned(t){return this.erc1155.getOwned(t)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!(await this.contractWrapper.read("hasRole",[p("transfer"),h]))}async getPackContents(t){const{contents:r,perUnitAmounts:e}=await this.contractWrapper.read("getPackContents",[t]),a=[],s=[],n=[];for(let o=0;o<r.length;o++){const t=r[o],c=e[o];switch(t.tokenType){case 0:{const r=await u(this.contractWrapper.getProvider(),t.assetContract),e=l(c,r.decimals),s=l(w.from(t.totalAmount).div(c),r.decimals);a.push({contractAddress:t.assetContract,quantityPerReward:e,totalRewards:s});break}case 1:s.push({contractAddress:t.assetContract,tokenId:t.tokenId.toString()});break;case 2:n.push({contractAddress:t.assetContract,tokenId:t.tokenId.toString(),quantityPerReward:c.toString(),totalRewards:w.from(t.totalAmount).div(c).toString()})}}return{erc20Rewards:a,erc721Rewards:s,erc1155Rewards:n}}create=g((async t=>{const r=await this.contractWrapper.getSignerAddress();return this.createTo.prepare(r,t)}));addPackContents=g((async(t,r)=>{const[e,a]=await Promise.all([this.contractWrapper.getSignerAddress(),K.parseAsync(r)]),{contents:s,numOfRewardUnits:n}=await this.toPackContentArgs(a);return m.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addPackContents",args:[t,s,n,e],parse:t=>{const r=this.contractWrapper.parseLogs("PackUpdated",t?.logs);if(0===r.length)throw new Error("PackUpdated event not found");const e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})}));createTo=g((async(t,r)=>{const[e,a,s]=await Promise.all([L(r.packMetadata,this.storage),M.parseAsync(r),f(t)]),{erc20Rewards:n,erc721Rewards:o,erc1155Rewards:c}=a,i={erc20Rewards:n,erc721Rewards:o,erc1155Rewards:c},{contents:d,numOfRewardUnits:p}=await this.toPackContentArgs(i);return m.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createPack",args:[d,p,e,a.openStartTime,a.rewardsPerPack,s],parse:t=>{const r=this.contractWrapper.parseLogs("PackCreated",t?.logs);if(0===r.length)throw new Error("PackCreated event not found");const e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})}));open=g((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;if(t._vrf)throw new Error("This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead");return m.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:a},parse:async r=>{const e=t.contractWrapper.parseLogs("PackOpened",r?.logs);if(0===e.length)throw new Error("PackOpened event not found");const a=e[0].args.rewardUnitsDistributed,s=[],n=[],o=[];for(const c of a)switch(c.tokenType){case 0:{const r=await u(t.contractWrapper.getProvider(),c.assetContract);s.push({contractAddress:c.assetContract,quantityPerReward:l(c.totalAmount,r.decimals).toString()});break}case 1:n.push({contractAddress:c.assetContract,tokenId:c.tokenId.toString()});break;case 2:o.push({contractAddress:c.assetContract,tokenId:c.tokenId.toString(),quantityPerReward:c.totalAmount.toString()})}return{erc20Rewards:s,erc721Rewards:n,erc1155Rewards:o}}})}})());async toPackContentArgs(t){const r=[],e=[],{erc20Rewards:a,erc721Rewards:s,erc1155Rewards:n}=t,o=this.contractWrapper.getProvider(),c=await this.contractWrapper.getSignerAddress();for(const i of a){const t=(await k(o,i.quantityPerReward,i.contractAddress)).mul(i.totalRewards);if(!(await y(this.contractWrapper,i.contractAddress,t)))throw new Error(`ERC20 token with contract address "${i.contractAddress}" does not have enough allowance to transfer.\n\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\n\nawait sdk.getToken("${i.contractAddress}").setAllowance("${this.getAddress()}", ${t});\n\n`);e.push(i.totalRewards),r.push({assetContract:i.contractAddress,tokenType:0,totalAmount:t,tokenId:0})}for(const i of s){if(!(await j(this.contractWrapper.getProvider(),this.getAddress(),i.contractAddress,i.tokenId,c)))throw new Error(`ERC721 token "${i.tokenId}" with contract address "${i.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getNFTCollection("${i.contractAddress}").setApprovalForToken("${this.getAddress()}", ${i.tokenId});\n\n`);e.push("1"),r.push({assetContract:i.contractAddress,tokenType:1,totalAmount:1,tokenId:i.tokenId})}for(const i of n){if(!(await j(this.contractWrapper.getProvider(),this.getAddress(),i.contractAddress,i.tokenId,c)))throw new Error(`ERC1155 token "${i.tokenId}" with contract address "${i.contractAddress}" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getEdition("${i.contractAddress}").setApprovalForAll("${this.getAddress()}", true);\n\n`);e.push(i.totalRewards),r.push({assetContract:i.contractAddress,tokenType:2,totalAmount:w.from(i.quantityPerReward).mul(w.from(i.totalRewards)),tokenId:i.tokenId})}return{contents:r,numOfRewardUnits:e}}async prepare(t,r,e){return m.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}detectVrf(){if(S(this.contractWrapper,"PackVRF"))return new Q(this.contractWrapper.getSignerOrProvider(),this.contractWrapper.address,this.storage,this.contractWrapper.options,this.chainId)}}export{Z as Pack};
//# sourceMappingURL=pack-02f90278.browser.esm-CuiXE1R1.js.map
