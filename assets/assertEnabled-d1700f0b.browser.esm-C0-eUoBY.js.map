{"version":3,"file":"assertEnabled-d1700f0b.browser.esm-C0-eUoBY.js","sources":["../../node_modules/@thirdweb-dev/sdk/dist/assertEnabled-d1700f0b.browser.esm.js"],"sourcesContent":["import { BigNumber } from 'ethers';\nimport { z } from 'zod';\nimport { x as ExtensionNotImplementedError } from './index-33cd3415.browser.esm.js';\n\nconst RawDateSchema = /* @__PURE__ */(() => z.union([z.date().transform(i => {\n  return BigNumber.from(Math.floor(i.getTime() / 1000));\n}), z.number().transform(i => {\n  return BigNumber.from(i);\n})]))();\n\n/**\n * Default to now\n */\nconst StartDateSchema = /* @__PURE__ */(() => RawDateSchema.default(new Date(0)))();\n\n/**\n * Default to 10 years from now\n */\nconst EndDateSchema = /* @__PURE__ */(() => RawDateSchema.default(new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10)))();\n\n/**\n * Checks whether the given DetectableFeature is defined\n * @internal\n * @param namespace - The namespace to check\n * @param feature - The corresponding feature\n */\nfunction assertEnabled(namespace, feature) {\n  if (!namespace) {\n    throw new ExtensionNotImplementedError(feature);\n  }\n  return namespace;\n}\n\nexport { EndDateSchema as E, RawDateSchema as R, StartDateSchema as S, assertEnabled as a };\n"],"names":["RawDateSchema","z","union","date","transform","i","BigNumber","from","Math","floor","getTime","number","StartDateSchema","default","Date","EndDateSchema","now","assertEnabled","namespace","feature","ExtensionNotImplementedError"],"mappings":"uDAIK,MAACA,EAA+B,KAAOC,EAAEC,MAAM,CAACD,EAAEE,OAAOC,WAAUC,GAC/DC,EAAUC,KAAKC,KAAKC,MAAMJ,EAAEK,UAAY,QAC7CT,EAAEU,SAASP,WAAUC,GAChBC,EAAUC,KAAKF,OAHa,GAS/BO,EAAiC,KAAOZ,EAAca,QAAQ,IAAIC,KAAK,IAAtC,GAKjCC,EAA+B,KAAOf,EAAca,QAAQ,IAAIC,KAAKA,KAAKE,MAAQ,UAAnD,GAQrC,SAASC,EAAcC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAIE,EAA6BD,GAEzC,OAAOD,CACT","x_google_ignoreList":[0]}