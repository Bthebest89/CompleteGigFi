import{a as t,E as e,S as r}from"./assertEnabled-d1700f0b.browser.esm-C0-eUoBY.js";import{C as a,d as s,G as n,a as i,b as o}from"./contract-appuri-5c40af52.browser.esm-Bz6oVDxP.js";import{f as c,a as p,e as d,A as m,F as h,i as g,b as u,c as l,T as f,j as w,C as A,g as W,d as y,I as v,h as P,k as T,l as x,m as S,n as b,o as E,p as C,q as D,t as R,r as F,s as k,u as N,v as L,B as j,w as M,x as q,y as I,z as O,D as V,E as U,G as Y,H as _,J as K,K as B,L as Q,M as G,N as H,O as J,P as X,Q as $,R as z,S as Z,U as tt,V as et,W as rt,X as at,Y as st}from"./index-BdgVNXf3.js";import{r as nt}from"./index-voFwA1yT.js";import{C as it}from"./contract-interceptor-d7b164a7.browser.esm-Dui4xQZ5.js";import{C as ot,a as ct}from"./contract-owner-49e75547.browser.esm-_SCqISV8.js";import{C as pt}from"./contract-platform-fee-e756e68f.browser.esm-CRqOvknr.js";import{C as dt}from"./contract-roles-71988d2e.browser.esm-CpZiDLHX.js";import{C as mt}from"./contract-sales-918c7cb8.browser.esm-DBh2PU1o.js";import{E as ht}from"./erc-1155-7ce9bee1.browser.esm-BSstTiNG.js";import{E as gt}from"./erc-20-9a18a51c.browser.esm-C1wHGVqi.js";import{E as ut}from"./erc-721-27306550.browser.esm-BS-g0s5y.js";import{M as lt,a as ft,b as wt}from"./marketplacev3-offers-ce1f096b.browser.esm-DWLRe7HE.js";import"./web3-vendor-D-smDdvq.js";import"./react-vendor-oRnAdrvc.js";import"./ui-vendor-DvZrbspg.js";import"./treeify-PLB7ybit.js";import"./setErc20Allowance-7f76f677.browser.esm-DUVYy-Mo.js";import"./QueryParams-32a56510.browser.esm-CIeLU7Il.js";import"./drop-claim-conditions-e6f2abbf.browser.esm-DUin9XFx.js";import"./cleanCurrencyAddress-ded19cfe.browser.esm-CnKsRlUV.js";import"./marketplace-e3129e2f.browser.esm-B9VhitKm.js";let At=function(t){return t[t.None=0]="None",t[t.AddAdmin=1]="AddAdmin",t[t.RemoveAdmin=2]="RemoveAdmin",t}({});const Wt={startDate:j.from(0),expirationDate:j.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},yt=(()=>O.object({startDate:r,expirationDate:e,nativeTokenLimitPerTransaction:U.default(0),approvedCallTargets:O.union([O.array(Y),O.literal("*")])}))(),vt=(()=>O.array(O.object({signer:Y,makeAdmin:O.boolean(),permissions:yt})))(),Pt=[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],Tt=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];class xt{featureName=N.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}hasDuplicateSigners(t){const e={},r=t.map((t=>t.signer));for(const a of r){if(e[a])return!0;e[a]=!0}return!1}parseSignerPermissionsStruct(t){return{startDate:new Date(1e3*parseInt(t.startTimestamp.toString())),expirationDate:new Date(1e3*parseInt(t.endTimestamp.toString())),nativeTokenLimitPerTransaction:j.from(t.nativeTokenLimitPerTransaction),approvedCallTargets:t.approvedTargets}}async sendSignerPermissionRequest(t,e,r){const{payload:a,signature:s}=await this.generatePayload(t,e,r);return f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[a,s]})}async generatePayload(t,e,r){const a={signer:t,isAdmin:r.valueOf(),approvedTargets:"*"===e.approvedCallTargets?[q]:e.approvedCallTargets,nativeTokenLimitPerTransaction:M(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:j.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:nt(void 0)},s=await this.contractWrapper.getChainID(),n=this.contractWrapper.getSigner();g(n);return{payload:a,signature:await this.contractWrapper.signTypedData(n,{name:"Account",version:"1",chainId:s,verifyingContract:this.getAddress()},{SignerPermissionRequest:Tt},a)}}async generateLegacyPayload(t,e){if("*"===e.approvedCallTargets)throw new Error("Wildcard call targets are not supported on legacy account permissions contract, please deploy an updated contract factory.");const r={signer:t,approvedTargets:e.approvedCallTargets,nativeTokenLimitPerTransaction:M(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:j.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:nt(void 0)},a=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();g(s);return{payload:r,signature:await this.contractWrapper.signTypedData(s,{name:"Account",version:"1",chainId:a,verifyingContract:this.getAddress()},{SignerPermissionRequest:Pt},r)}}async isAdmin(t){const e=await I(t);return await this.contractWrapper.read("isAdmin",[e])}async isSigner(t){const e=await I(t);return await this.contractWrapper.read("isActiveSigner",[e])}async getAllAdmins(){return await this.contractWrapper.read("getAllAdmins",[])}async getAllSigners(){const t=await this.contractWrapper.read("getAllActiveSigners",[]);return await Promise.all(t.map((async t=>({signer:t.signer,permissions:this.parseSignerPermissionsStruct(t)}))))}async getAllAdminsAndSigners(){return[...(await this.getAllAdmins()).map((t=>({isAdmin:!0,signer:t,permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:j.from(0),approvedCallTargets:[]}}))),...await this.getAllSigners()]}grantAdminPermissions=l((async t=>{const e=await I(t);return await this.sendSignerPermissionRequest(e,Wt,At.AddAdmin)}));revokeAdminPermissions=l((async t=>{const e=await I(t);return await this.sendSignerPermissionRequest(e,Wt,At.RemoveAdmin)}));grantPermissions=l((async(t,e)=>{const r=await I(t),a=await yt.parseAsync(e);return await this.sendSignerPermissionRequest(r,a,At.None)}));updatePermissions=l((async(t,e)=>{const r=await I(t),a=await yt.parseAsync(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot update permissions of an existing admin.");if(!(await this.isSigner(r)))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(r,a,At.None)}));revokeAccess=l((async t=>{const e=await I(t);return await this.sendSignerPermissionRequest(e,{startDate:j.from(0),expirationDate:j.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},At.None)}));approveTargetForSigner=l((async(t,e)=>{const r=await I(t),a=await I(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!(await this.isSigner(r)))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const s=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(s.approvedTargets.includes(e))throw new Error("Target is already approved");const n=[...s.approvedTargets,a];return await this.sendSignerPermissionRequest(r,{startDate:j.from(s.startTimestamp),expirationDate:j.from(s.endTimestamp),approvedCallTargets:n,nativeTokenLimitPerTransaction:s.nativeTokenLimitPerTransaction.toString()},At.None)}));disapproveTargetForSigner=l((async(t,e)=>{const r=await I(t),a=await I(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!(await this.isSigner(r)))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const s=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(!s.approvedTargets.includes(a))throw new Error("Target is currently not approved");const n=s.approvedTargets.filter((t=>V(t)!==V(a)));return await this.sendSignerPermissionRequest(r,{startDate:j.from(s.startTimestamp),expirationDate:j.from(s.endTimestamp),approvedCallTargets:n,nativeTokenLimitPerTransaction:s.nativeTokenLimitPerTransaction.toString()},At.None)}));resetAllPermissions=l((async t=>{const e=await vt.parseAsync(t);if(this.hasDuplicateSigners(e))throw new Error("Duplicate signers found in input.");const r=[],a=[],s=[],n=await this.getAllAdmins(),i=e.filter((t=>t.makeAdmin)).map((t=>t.signer));n.forEach((async t=>{if(!i.includes(t)){const e=(await this.sendSignerPermissionRequest(t,Wt,At.RemoveAdmin)).encode();r.push(e)}}));const o=await this.getAllSigners(),c=e.filter((t=>!t.makeAdmin)).map((t=>t.signer));await Promise.all(o.map((async t=>{if(!c.includes(t.signer)){const e=(await this.sendSignerPermissionRequest(t.signer,Wt,At.None)).encode();s.push(e)}})));for(const d of e)if(d.makeAdmin)(await this.sendSignerPermissionRequest(d.signer,Wt,At.AddAdmin)).encode();else{const t=(await this.sendSignerPermissionRequest(d.signer,d.permissions,At.None)).encode();a.push(t)}const p=[];return r.forEach((t=>{p.push(t)})),s.forEach((t=>{p.push(t)})),a.forEach((t=>{p.push(t)})),f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[p]})}))}class St{featureName=k.name;constructor(t){this.contractWrapper=t,this.accountPermissions=this.detectAccountPermissions()}detectAccountPermissions(){if(s(this.contractWrapper,"AccountPermissions")||s(this.contractWrapper,"AccountPermissionsV1"))return new xt(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async isAdmin(e){return t(this.accountPermissions,N).isAdmin(e)}async isSigner(e){return t(this.accountPermissions,N).isSigner(e)}async getAllAdmins(){return t(this.accountPermissions,N).getAllAdmins()}async getAllSigners(){return t(this.accountPermissions,N).getAllSigners()}async getAllAdminsAndSigners(){return t(this.accountPermissions,N).getAllAdminsAndSigners()}grantAdminPermissions=l((async e=>t(this.accountPermissions,N).grantAdminPermissions.prepare(e)));revokeAdminPermissions=l((async e=>t(this.accountPermissions,N).revokeAdminPermissions.prepare(e)));grantPermissions=l((async(e,r)=>t(this.accountPermissions,N).grantPermissions.prepare(e,r)));updatePermissions=l((async(e,r)=>t(this.accountPermissions,N).updatePermissions.prepare(e,r)));revokeAccess=l((async e=>t(this.accountPermissions,N).revokeAccess.prepare(e)));approveTargetForSigner=l((async(e,r)=>t(this.accountPermissions,N).approveTargetForSigner.prepare(e,r)));disapproveTargetForSigner=l((async(e,r)=>t(this.accountPermissions,N).disapproveTargetForSigner.prepare(e,r)));resetAllPermissions=l((async e=>t(this.accountPermissions,N).resetAllPermissions.prepare(e)))}class bt{featureName=D.name;constructor(t){this.contractWrapper=t,this.events=new a(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async predictAccountAddress(t,e){let r=R("");return e&&(r=e),this.contractWrapper.read("getAddress",[t,r])}async getAssociatedAccounts(t){return this.contractWrapper.read("getAccountsOfSigner",[t])}async getAllAccounts(){return await this.contractWrapper.read("getAllAccounts",[])}async isAccountDeployed(t,e){const r=await this.predictAccountAddress(t,e);return F(r,this.contractWrapper.getProvider())}createAccount=l((async(t,e)=>{if(await this.isAccountDeployed(t,e))throw new Error(`Account already deployed for admin: ${t}`);let r=R("");return e&&(r=e),f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAccount",args:[t,r],parse:t=>({address:this.contractWrapper.parseLogs("AccountCreated",t?.logs)[0].args.account,receipt:t})})}))}class Et{constructor(t,e){this.contractWrapper=t,this.storage=e}async get(){return this._cachedMetadata||(this._cachedMetadata=await c(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)),this._cachedMetadata}async extractSources(){const t=await this.get();return p(t,this.storage)}async extractFunctions(){let t;try{t=await this.get()}catch(e){}return d(m.parse(this.contractWrapper.abi),t?.metadata)}async extractEvents(){let t;try{t=await this.get()}catch(e){}return function(t,e){const r=m.parse(t||[]).filter((t=>"event"===t.type)),a=[];for(const s of r){const t=L(s.name,e,"events");a.push({inputs:s.inputs||[],outputs:s.outputs||[],name:s.name||"unknown",comment:t})}return a}(m.parse(this.contractWrapper.abi),t?.metadata)}}class Ct{featureName=h.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.readContract.address}async getAll(){return await this.contractWrapper.readContract.getAllExtensions()}async get(t){return await this.contractWrapper.readContract.getExtension(t)}async getExtensionAddress(t){return(await this.get(t)).metadata.implementation}async getAllFunctions(t){return(await this.get(t)).functions}async getExtensionForFunction(t){let e=t.functionSelector;e||(g(t.functionSignature),e=u(t.functionSignature).substring(0,10));return await this.contractWrapper.readContract.getMetadataForFunction(e)}async getExtensionAddressForFunction(t){return(await this.getExtensionForFunction(t)).implementation}add=l((async t=>f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionAdded",e.logs).length<1)throw new Error("No ExtensionAdded event found");const r=t.extensionAbi?m.parse(t.extensionAbi):(await c(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForAdd(r,t.extension),s=w([m.parse(this.contractWrapper.abi),a]);return this.contractWrapper.updateAbi(s),e}})));addDeployed=l((async t=>{let e=t.extensionAbi;if(!e){e=(await c(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi}g(e);let r="";if(t.extensionMetadata)if("string"==typeof t.extensionMetadata)r=t.extensionMetadata;else{const e=await A.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(e)}const a=W(m.parse(e)),s={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.add.prepare({extension:s,extensionAbi:e})}));addPublished=l((async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||y,e);return this.addDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})}));replace=l((async t=>f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"replaceExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionReplaced",e.logs).length<1)throw new Error("No ExtensionReplaced event found");const r=t.extensionAbi?m.parse(t.extensionAbi):(await c(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForRemove(m.parse(this.contractWrapper.abi),r),s=this.filterAbiForAdd(r,t.extension),n=w([a,s]);return this.contractWrapper.updateAbi(n),e}})));replaceDeployed=l((async t=>{let e=t.extensionAbi;if(!e){e=(await c(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi}g(e);let r="";if(t.extensionMetadata)if("string"==typeof t.extensionMetadata)r=t.extensionMetadata;else{const e=await A.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(e)}const a=W(m.parse(e)),s={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.replace.prepare({extension:s,extensionAbi:e})}));replacePublished=l((async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||y,e);return this.replaceDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})}));remove=l((async t=>{const e=await this.getExtensionAddress(t.extensionName);return f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"removeExtension",args:[t.extensionName],parse:async t=>{if(this.contractWrapper.parseLogs("ExtensionRemoved",t.logs).length<1)throw new Error("No ExtensionRemoved event found");const r=(await c(e,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForRemove(m.parse(this.contractWrapper.abi),r);return this.contractWrapper.updateAbi(a),t}})}));filterAbiForAdd(t,e){const r=new v(t),a=e.functions.map((t=>t.functionSelector));return t.filter((t=>{const e=Object.values(new v([t]).functions);if(0===e.length)return!1;const s=r.getSighash(e[0]);return a.includes(s)}))}filterAbiForRemove(t,e){const r=new v(t),a=new v(e),s=Object.values(a.functions).map((t=>a.getSighash(t)));return t.filter((t=>{const e=Object.values(new v([t]).functions);if(0===e.length)return!1;const a=r.getSighash(e[0]);return!s.includes(a)}))}async deployExtension(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"latest";const a=await P(e,t,r,this.contractWrapper.storage,this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),s=await T(a.metadataUri,this.contractWrapper.storage,this.contractWrapper.getProvider(),"",this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),n=s.find((t=>"implementation"===t.type))?.transaction.predictedAddress,i=s.filter((t=>t.transaction.data&&t.transaction.data.length>0)),o=i.filter((t=>"infra"!==t.type)).map((t=>t.transaction)),c=i.filter((t=>"infra"===t.type)).map((t=>t.transaction)),p=this.contractWrapper.getSigner();g(p),await x(p,c,{});for(const m of o)try{await S(p,m)}catch(d){}return{deployedExtensionAddress:n,extensionMetadata:a.metadataUri}}}class Dt{featureName=b.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=l((async(t,e,r)=>f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC20",args:[t,e,r],parse:t=>{const e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map((t=>({recipient:t.args.recipient,amount:t.args.amount.toString()})));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}})))}class Rt{featureName=E.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=l((async(t,e,r)=>f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC721",args:[t,e,r],parse:t=>{const e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map((t=>({recipient:t.args.recipient,tokenId:t.args.tokenId.toNumber()})));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}})))}class Ft{featureName=C.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=l((async(t,e,r)=>f.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC1155",args:[t,e,r],parse:t=>{const e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map((t=>({recipient:t.args.recipient,tokenId:t.args.tokenId.toNumber(),amount:t.args.amount.toString()})));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}})))}class kt{get abi(){return m.parse(this.contractWrapper.abi||[])}get royalties(){return t(this.detectRoyalties(),G)}get roles(){return t(this.detectRoles(),H)}get sales(){return t(this.detectPrimarySales(),J)}get platformFees(){return t(this.detectPlatformFees(),X)}get owner(){return t(this.detectOwnable(),$)}get erc20(){return t(this.detectErc20(),z)}get erc721(){return t(this.detectErc721(),Z)}get erc1155(){return t(this.detectErc1155(),tt)}get app(){return t(this.detectApp(),et)}get directListings(){return t(this.detectDirectListings(),rt)}get englishAuctions(){return t(this.detectEnglishAuctions(),at)}get offers(){return t(this.detectOffers(),st)}get airdrop20(){return t(this.detectAirdrop20(),b)}get airdrop721(){return t(this.detectAirdrop721(),E)}get airdrop1155(){return t(this.detectAirdrop1155(),C)}get accountFactory(){return t(this.detectAccountFactory(),D)}get account(){return t(this.detectAccount(),k)}get extensions(){return t(this.detectBaseRouter(),h)}get chainId(){return this._chainId}constructor(t,e,r,s){let o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new _(t,e,r,arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},s);this._chainId=o,this.storage=s,this.contractWrapper=c,this.events=new a(this.contractWrapper),this.encoder=new K(this.contractWrapper),this.interceptor=new it(this.contractWrapper),this.estimator=new n(this.contractWrapper),this.publishedMetadata=new Et(this.contractWrapper,this.storage),this.metadata=new i(this.contractWrapper,B,this.storage)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}prepare(t,e,r){return f.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}detectRoyalties(){if(s(this.contractWrapper,"Royalty")){const t=new i(this.contractWrapper,B,this.storage);return new ot(this.contractWrapper,t)}}detectRoles(){if(s(this.contractWrapper,"Permissions"))return new dt(this.contractWrapper,Q)}detectPrimarySales(){if(s(this.contractWrapper,"PrimarySale"))return new mt(this.contractWrapper)}detectPlatformFees(){if(s(this.contractWrapper,"PlatformFee"))return new pt(this.contractWrapper)}detectErc20(){if(s(this.contractWrapper,"ERC20"))return new gt(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if(s(this.contractWrapper,"ERC721"))return new ut(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if(s(this.contractWrapper,"ERC1155"))return new ht(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if(s(this.contractWrapper,"Ownable"))return new ct(this.contractWrapper)}detectApp(){const t=new i(this.contractWrapper,B,this.storage);return s(this.contractWrapper,"AppURI")||s(this.contractWrapper,"ContractMetadata")?new o(this.contractWrapper,t,this.storage):void 0}detectDirectListings(){if(s(this.contractWrapper,"DirectListings"))return new lt(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(s(this.contractWrapper,"EnglishAuctions"))return new ft(this.contractWrapper,this.storage)}detectOffers(){if(s(this.contractWrapper,"Offers"))return new wt(this.contractWrapper,this.storage)}detectBaseRouter(){if(s(this.contractWrapper,h.name))return new Ct(this.contractWrapper)}detectAirdrop20(){if(s(this.contractWrapper,"AirdropERC20"))return new Dt(this.contractWrapper)}detectAirdrop721(){if(s(this.contractWrapper,"AirdropERC721"))return new Rt(this.contractWrapper)}detectAirdrop1155(){if(s(this.contractWrapper,"AirdropERC1155"))return new Ft(this.contractWrapper)}detectAccountFactory(){if(s(this.contractWrapper,D.name))return new bt(this.contractWrapper)}detectAccount(){if(s(this.contractWrapper,k.name))return new St(this.contractWrapper)}}export{kt as SmartContract};
//# sourceMappingURL=smart-contract-ac432d60.browser.esm-DGJDRmsm.js.map
